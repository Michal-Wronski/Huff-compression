//Definition of field of rationals
Q:=Rationals(); 

//Definition of function field
rQ<a,b>:=FunctionField(Q,2); 

//Definition of polynomial ring over function field rQ
pF2<x,y>:=PolynomialRing(rQ,2);

//Huff's curve equation in normal form
H:=a*x*(y^2-1) - b*y*(x^2-1);  	

//Definition of compression function of degree 2 on Huff's curve
f:=x*y; 

//Definition of polynomial ring over function field rQ
pF4<x1,y1,x2,y2>:=PolynomialRing(rQ,4);

//Definition of addition law on Huff's curves (P+Q)
x3:= (x1+x2)*(1+y1*y2)/((1+x1*x2)*(1-y1*y2));
y3:= (y1+y2)*(1+x1*x2)/((1-x1*x2)*(1+y1*y2));

//Point doubling
xd:=Evaluate(x3,[x,y,x,y]); 
yd:=Evaluate(y3,[x,y,x,y]); 

//Computation of f([2]P)
fd:=Evaluate(f,[xd,yd]); 

//Computation of P-Q
x4:=Evaluate(x3, [x1,y1,-x2,-y2]);       
y4:=Evaluate(y3, [x1,y1,-x2,-y2]);  

//Evaluation of compression function f in given points P, Q, P+Q, P-Q respectively
f1:=Evaluate(f,[x1,y1]);
f2:=Evaluate(f,[x2,y2]);
f3:=Evaluate(f,[x3,y3]);
f4:=Evaluate(f,[x4,y4]);  

//Ideals definition
I:=ideal<pF2|H>;
I1:=ideal<pF4|[Evaluate(H,[x1,y1]),Evaluate(H,[x2,y2])]>;  

/*
Chcecking of correctness of doubling formula using compression function f, where f:=f(P), and fd:=f([2]P).
We check if fd:=f([2]P) is equal to 4*f*(f^2+(b/a + a/b)*f+1)/(f^2-1)^2).
The formula is correct if the result is equal to 0.
*/
NormalForm(Numerator(fd - 4*f*(f^2+(b/a + a/b)*f+1)/(f^2-1)^2), I);     

/*
Chcecking of correctness of differential addition formula using compression function f, where f1:=f(P), f2:=f(Q), f3:=f(P+Q) and f4:=f(P-Q)
We check if f3*f4:=f(P+Q)*f(P-Q) is equal to ((f1 - f2)/(f1*f2 - 1))^2).
The formula is correct if the result is equal to 0.
*/
NormalForm(Numerator( f3*f4 - ((f1 - f2)/(f1*f2 - 1))^2), I1);

/*
Chcecking of correctness of point recovery formula using compression function f, where P:=(x1, y1), x2:=xQ, f2:=f(Q), f3:=f(P+Q) and f4:=f(P-Q)
We check if x2:=xQ is equal to f2*((y1*f3 + x1)*(b*f2 + a) + (a*f2 + b)*(x1*f3 + y1))/((b*f2+a)*(f3 - f2 + x1*y1*(f2*f3-1)))).
The formula is correct if the result is equal to 0.
*/
NormalForm(Numerator(x2- f2*((y1*f3 + x1)*(b*f2 + a) + (a*f2 + b)*(x1*f3 + y1))/
((b*f2+a)*(f3 - f2 + x1*y1*(f2*f3-1)))),I1);
